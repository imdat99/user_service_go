// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

type User struct {
	ent.Schema
}

func (User) Fields() []ent.Field {
	return []ent.Field{field.String("id"), field.String("email").Unique(), field.String("username").Optional().Unique(), field.String("password_hash"), field.String("first_name"), field.String("last_name"), field.String("phone").Optional(), field.Time("date_of_birth").Optional(), field.String("avatar_url").Optional(), field.Bool("email_verified").Optional(), field.Bool("phone_verified").Optional(), field.Enum("account_status").Optional().Values("active", "inactive", "suspended", "pending"), field.Time("last_login_at").Optional(), field.Time("created_at").Optional(), field.Time("updated_at").Optional(), field.Time("deleted_at").Optional()}
}
func (User) Edges() []ent.Edge {
	return []ent.Edge{edge.To("activity_logs", ActivityLog.Type), edge.To("api_keys", ApiKey.Type), edge.To("notification_setting", NotificationSetting.Type).Unique(), edge.To("payment_methods", PaymentMethod.Type), edge.To("privacy_setting", PrivacySetting.Type).Unique(), edge.To("transactions", Transaction.Type), edge.To("user2fa", User2fa.Type).Unique(), edge.To("user_profile", UserProfile.Type).Unique(), edge.To("user_sessions", UserSession.Type), edge.To("user_tokens", UserToken.Type)}
}
func (User) Annotations() []schema.Annotation {
	return nil
}
